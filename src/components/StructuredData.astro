---
import { getLangFromUrl, useTranslations } from "../utils/i18n";

const siteUrl = "https://cofoundy.dev";
const logoUrl = `${siteUrl}/favicon.svg`;
const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const organizationData = {
  "@context": "https://schema.org",
  "@type": "Organization",
  name: "Cofoundy",
  alternateName: t('meta.title'),
  url: siteUrl,
  logo: {
    "@type": "ImageObject",
    url: logoUrl,
    width: "64",
    height: "64"
  },
  image: logoUrl,
  description: t('meta.description'),
  slogan: t('hero.title'),
  foundingDate: "2024",
  inLanguage: currentLang,
  availableLanguage: ["es", "en", "pt"],
  sameAs: [
    "https://www.linkedin.com/company/co-foundy",
    "https://github.com/cofoundy",
  ],
  address: {
    "@type": "PostalAddress",
    addressCountry: "PE",
  },
  contactPoint: {
    "@type": "ContactPoint",
    contactType: "customer service",
    email: "contacto@cofoundy.dev",
    availableLanguage: ["Spanish", "English", "Portuguese"],
  },
  serviceArea: ["Perú", "Latinoamérica", "Global"],
  knowsAbout: [
    "Web Development",
    "Artificial Intelligence",
    "GenAI",
    "Computer Vision",
    "Machine Learning",
    "Data Science",
    "Startup MVPs",
  ],
};

// Professional Service structured data
const serviceData = {
  "@context": "https://schema.org",
  "@type": "ProfessionalService",
  name: "Cofoundy",
  url: siteUrl,
  logo: logoUrl,
  description: t('meta.description'),
  inLanguage: currentLang,
  priceRange: "$$",
  hasOfferCatalog: {
    "@type": "OfferCatalog",
    name: t('services.title'),
    itemListElement: [
      {
        "@type": "Offer",
        itemOffered: {
          "@type": "Service",
          name: t('services.web.title'),
          description: t('services.web.description'),
        },
      },
      {
        "@type": "Offer",
        itemOffered: {
          "@type": "Service",
          name: t('services.ai.title'),
          description: t('services.ai.description'),
        },
      },
      {
        "@type": "Offer",
        itemOffered: {
          "@type": "Service",
          name: t('services.mvp.title'),
          description: t('services.mvp.description'),
        },
      },
    ],
  },
};
---

<script
  type="application/ld+json"
  set:html={JSON.stringify(organizationData)}
/>
<script type="application/ld+json" set:html={JSON.stringify(serviceData)} />
