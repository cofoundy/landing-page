---
import { routes } from "../utils/routes";
---

<section
  class="relative min-h-screen flex items-center pt-16 md:pt-20 pb-24 md:pb-32 overflow-hidden bg-white"
>
  <!-- Animated background -->
  <div class="absolute inset-0">
    <!-- Mesh grid with gradient mask -->
    <div
      class="absolute inset-0 bg-[linear-gradient(rgba(70,160,208,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(70,160,208,0.1)_1px,transparent_1px)] bg-[size:24px_24px] md:bg-[size:32px_32px] [mask-image:radial-gradient(ellipse_100%_100%_at_50%_-20%,#fff_70%,transparent_100%)]"
    >
    </div>

    <!-- Floating orbs -->
    <div class="absolute inset-0">
      <div
        class="absolute top-1/4 left-1/4 w-64 md:w-96 h-64 md:h-96 bg-primary/20 rounded-full blur-3xl animate-float"
      >
      </div>
      <div
        class="absolute bottom-1/4 right-1/4 w-64 md:w-96 h-64 md:h-96 bg-secondary/20 rounded-full blur-3xl animate-float-delayed"
      >
      </div>
    </div>

    <!-- Particle effect -->
    <div class="particle-container">
      {
        Array.from({ length: 30 }).map((_, i) => (
          <div
            class="particle"
            style={`--delay: ${i * 0.3}s; --size: ${Math.random() * 3 + 1}px; --start-x: ${Math.random() * 100}%; --end-x: ${Math.random() * 100}%;`}
          />
        ))
      }
    </div>
  </div>

  <div class="container relative mx-auto px-4">
    <div class="grid lg:grid-cols-2 gap-8 md:gap-12 items-center">
      <!-- Content -->
      <div class="relative z-10 text-center lg:text-left">
        <h1
          class="text-4xl sm:text-5xl md:text-6xl font-bold mb-4 md:mb-6 bg-gradient-to-r from-secondary via-primary to-primary-dark bg-clip-text text-transparent"
        >
          Hacemos realidad tu proyecto tech
        </h1>
        <p
          class="text-lg md:text-xl text-secondary/90 mb-6 md:mb-8 max-w-2xl mx-auto lg:mx-0 leading-relaxed"
        >
          Consultora de software especializada en desarrollo web e inteligencia
          artificial, transformando ideas en soluciones tecnol√≥gicas.
        </p>
        <div
          class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start"
        >
          <a
            href={routes.contact}
            class="inline-flex items-center justify-center px-6 sm:px-8 py-3 sm:py-4 bg-primary hover:bg-primary-dark text-white font-medium rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg group text-base sm:text-lg"
          >
            Iniciar Proyecto
            <svg
              class="ml-2 w-4 h-4 sm:w-5 sm:h-5 transition-transform duration-300 group-hover:translate-x-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
          <a
            href={routes.services}
            class="inline-flex items-center justify-center px-6 sm:px-8 py-3 sm:py-4 bg-secondary/5 hover:bg-secondary/10 text-secondary font-medium rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg backdrop-blur-sm border border-secondary/20 text-base sm:text-lg"
          >
            Ver Servicios
          </a>
        </div>
      </div>

      <!-- Hero Image -->
      <div class="relative z-10 mt-8 lg:mt-0">
        <!-- Code animation background -->
        <div class="absolute inset-0 -right-4 md:-right-8 flex items-center">
          <div
            class="w-full h-3/4 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-3xl overflow-hidden backdrop-blur-sm border border-secondary/10"
          >
            <div class="animate-code-scroll">
              <pre
                class="text-[8px] md:text-[10px] leading-tight text-primary/60 p-4">
                <code>{`function initAI() {
  const model = new NeuralNetwork();
  model.train(data);
  return model;
}

class WebApp {
  constructor() {
    this.ai = initAI();
    this.init();
  }

  async process() {
    const result = 
      await this.ai.predict();
    return optimize(result);
  }
}

// More code scrolling...`}</code>
              </pre>
            </div>
          </div>
        </div>

        <!-- Unicorn image with floating animation -->
        <div
          class="relative transform hover:scale-102 transition-transform duration-700 animate-float-slow px-4 md:px-0"
        >
          <picture>
            <!-- Mobile optimized image -->
            <source
              media="(max-width: 640px)"
              srcset="/unicornio-programando-mobile.webp"
              width="640"
              height="480"
            />
            <!-- Tablet optimized image -->
            <source
              media="(max-width: 1024px)"
              srcset="/unicornio-programando-tablet.webp"
              width="1024"
              height="768"
            />
            <!-- Desktop image -->
            <img
              src="/unicornio-programando.webp"
              alt="Cofoundy Tech Unicorn"
              class="relative z-10 w-full h-auto"
              width="800"
              height="600"
              loading="eager"
              fetchpriority="high"
            />
          </picture>
          <!-- Glow effect -->
          <div
            class="absolute inset-0 bg-gradient-to-r from-primary/30 to-secondary/30 rounded-full filter blur-3xl opacity-50 scale-90 animate-pulse"
          >
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bottom wave decoration -->
  <div class="absolute bottom-0 left-0 right-0 h-48 md:h-64 overflow-hidden">
    <!-- Smooth gradient overlay -->
    <div
      class="absolute inset-x-0 bottom-0 h-24 bg-gradient-to-b from-transparent to-dark"
    >
    </div>

    <!-- Animated wave layers -->
    <div class="absolute inset-0 opacity-20">
      <svg
        class="w-full h-full"
        viewBox="0 0 1440 100"
        fill="none"
        preserveAspectRatio="none"
      >
        <path
          class="animate-wave-slow"
          d="M0 50L48 45.7C96 41.3 192 32.7 288 27.8C384 23 480 22 576 28.8C672 35.7 768 50.3 864 55.2C960 60 1056 55 1152 46.8C1248 38.7 1344 27.3 1392 21.7L1440 16V100H0V50Z"
          fill="url(#wave-gradient-1)"></path>
      </svg>
    </div>
    <div class="absolute inset-0 opacity-30">
      <svg
        class="w-full h-full"
        viewBox="0 0 1440 100"
        fill="none"
        preserveAspectRatio="none"
      >
        <path
          class="animate-wave-medium"
          d="M0 70L48 64.3C96 58.7 192 47.3 288 44.7C384 42 480 48 576 54.8C672 61.7 768 69.3 864 69.2C960 69 1056 61 1152 55.2C1248 49.3 1344 45.7 1392 43.8L1440 42V100H0V70Z"
          fill="url(#wave-gradient-2)"></path>
      </svg>
    </div>
    <div class="absolute inset-0 opacity-40">
      <svg
        class="w-full h-full"
        viewBox="0 0 1440 100"
        fill="none"
        preserveAspectRatio="none"
      >
        <path
          class="animate-wave-fast"
          d="M0 80L48 77.3C96 74.7 192 69.3 288 71.2C384 73 480 82 576 84.8C672 87.7 768 84.3 864 79.2C960 74 1056 67 1152 65.2C1248 63.3 1344 66.7 1392 68.3L1440 70V100H0V80Z"
          fill="url(#wave-gradient-3)"></path>
        <defs>
          <linearGradient
            id="wave-gradient-1"
            x1="0"
            y1="0"
            x2="0"
            y2="100"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0%" stop-color="#46A0D0"></stop>
            <stop offset="100%" stop-color="#020B1B"></stop>
          </linearGradient>
          <linearGradient
            id="wave-gradient-2"
            x1="0"
            y1="0"
            x2="0"
            y2="100"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0%" stop-color="#46A0D0"></stop>
            <stop offset="100%" stop-color="#020B1B"></stop>
          </linearGradient>
          <linearGradient
            id="wave-gradient-3"
            x1="0"
            y1="0"
            x2="0"
            y2="100"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0%" stop-color="#46A0D0"></stop>
            <stop offset="100%" stop-color="#020B1B"></stop>
          </linearGradient>
        </defs>
      </svg>
    </div>
  </div>
</section>

<style>
  /* Floating animations */
  @keyframes float {
    0%,
    100% {
      transform: translateY(0) rotate(0);
    }
    50% {
      transform: translateY(-20px) rotate(5deg);
    }
  }

  @keyframes float-delayed {
    0%,
    100% {
      transform: translateY(0) rotate(0);
    }
    50% {
      transform: translateY(-30px) rotate(-5deg);
    }
  }

  @keyframes float-slow {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-float {
    animation: float 15s ease-in-out infinite;
  }
  .animate-float-delayed {
    animation: float-delayed 18s ease-in-out infinite;
  }
  .animate-float-slow {
    animation: float-slow 6s ease-in-out infinite;
  }

  /* Reduce animations on mobile */
  @media (max-width: 640px) {
    .animate-float,
    .animate-float-delayed,
    .animate-float-slow {
      animation-duration: 0s;
    }

    .particle-container {
      display: none;
    }

    .animate-code-scroll {
      animation-duration: 30s;
    }

    /* Optimize background effects */
    .bg-gradient-to-r {
      background-image: linear-gradient(
        to right,
        rgba(70, 160, 208, 0.2),
        rgba(27, 87, 126, 0.2)
      );
    }

    .blur-3xl {
      --tw-blur: blur(24px);
    }
  }

  /* Reduce some animations on tablet */
  @media (max-width: 1024px) {
    .animate-float,
    .animate-float-delayed {
      animation-duration: 0s;
    }

    .particle-container {
      opacity: 0.5;
    }

    .animate-code-scroll {
      animation-duration: 25s;
    }
  }

  /* Code scrolling animation */
  @keyframes code-scroll {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(-50%);
    }
  }

  .animate-code-scroll {
    animation: code-scroll 20s linear infinite;
  }

  /* Particle animation */
  .particle-container {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    width: var(--size);
    height: var(--size);
    background: radial-gradient(
      circle at center,
      rgba(70, 160, 208, 0.7) 0%,
      transparent 100%
    );
    border-radius: 50%;
    top: 0;
    left: var(--start-x);
    animation: particle 8s ease-in infinite;
    animation-delay: var(--delay);
  }

  @keyframes particle {
    0% {
      transform: translateY(-20px) scale(0);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(100vh) scale(1);
      opacity: 0;
    }
  }

  /* Pulse animation for glow effect */
  @keyframes pulse {
    0%,
    100% {
      opacity: 0.5;
      transform: scale(0.9);
    }
    50% {
      opacity: 0.7;
      transform: scale(1);
    }
  }

  .animate-pulse {
    animation: pulse 4s ease-in-out infinite;
  }

  /* Wave animations */
  @keyframes wave-slow {
    0%,
    100% {
      d: path(
        "M0 50L48 45.7C96 41.3 192 32.7 288 27.8C384 23 480 22 576 28.8C672 35.7 768 50.3 864 55.2C960 60 1056 55 1152 46.8C1248 38.7 1344 27.3 1392 21.7L1440 16V100H0V50Z"
      );
    }
    50% {
      d: path(
        "M0 60L48 55.7C96 51.3 192 42.7 288 37.8C384 33 480 32 576 38.8C672 45.7 768 60.3 864 65.2C960 70 1056 65 1152 56.8C1248 48.7 1344 37.3 1392 31.7L1440 26V100H0V60Z"
      );
    }
  }

  @keyframes wave-medium {
    0%,
    100% {
      d: path(
        "M0 70L48 64.3C96 58.7 192 47.3 288 44.7C384 42 480 48 576 54.8C672 61.7 768 69.3 864 69.2C960 69 1056 61 1152 55.2C1248 49.3 1344 45.7 1392 43.8L1440 42V100H0V70Z"
      );
    }
    50% {
      d: path(
        "M0 80L48 74.3C96 68.7 192 57.3 288 54.7C384 52 480 58 576 64.8C672 71.7 768 79.3 864 79.2C960 79 1056 71 1152 65.2C1248 59.3 1344 55.7 1392 53.8L1440 52V100H0V80Z"
      );
    }
  }

  @keyframes wave-fast {
    0%,
    100% {
      d: path(
        "M0 80L48 77.3C96 74.7 192 69.3 288 71.2C384 73 480 82 576 84.8C672 87.7 768 84.3 864 79.2C960 74 1056 67 1152 65.2C1248 63.3 1344 66.7 1392 68.3L1440 70V100H0V80Z"
      );
    }
    50% {
      d: path(
        "M0 90L48 87.3C96 84.7 192 79.3 288 81.2C384 83 480 92 576 94.8C672 97.7 768 94.3 864 89.2C960 84 1056 77 1152 75.2C1248 73.3 1344 76.7 1392 78.3L1440 80V100H0V90Z"
      );
    }
  }

  .animate-wave-slow {
    animation: wave-slow 8s ease-in-out infinite;
  }
  .animate-wave-medium {
    animation: wave-medium 6s ease-in-out infinite;
  }
  .animate-wave-fast {
    animation: wave-fast 4s ease-in-out infinite;
  }
</style>
