---
import { getLangFromUrl, useTranslations } from "../utils/i18n";

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const features = [
  {
    icon: "ðŸ’»",
    title: t('features.web_dev.title'),
    description: t('features.web_dev.description'),
  },
  {
    icon: "ðŸ§ ",
    title: t('features.ai.title'),
    description: t('features.ai.description'),
  },
  {
    icon: "ðŸš€",
    title: t('features.mvps.title'),
    description: t('features.mvps.description'),
  },
  {
    icon: "ðŸ‘¥",
    title: t('features.cofounder.title'),
    description: t('features.cofounder.description'),
  },
  {
    icon: "âš¡",
    title: t('features.realtime.title'),
    description: t('features.realtime.description'),
  },
];

// Different decorative patterns for each card
const decorations = [
  { // Web Development - Circuit-like pattern
    class: "before:absolute before:inset-0 before:bg-[linear-gradient(45deg,transparent_85%,rgba(70,160,208,0.1)_90%,transparent_95%),linear-gradient(-45deg,transparent_85%,rgba(70,160,208,0.1)_90%,transparent_95%)]",
  },
  { // AI - Neural network dots
    class: "before:absolute before:inset-0 before:bg-[radial-gradient(circle_at_30%_20%,rgba(70,160,208,0.1)_0,transparent_8px),radial-gradient(circle_at_70%_60%,rgba(70,160,208,0.1)_0,transparent_8px)]",
  },
  { // MVPs - Diagonal stripes
    class: "before:absolute before:inset-0 before:bg-[linear-gradient(135deg,transparent_45%,rgba(70,160,208,0.1)_47%,rgba(70,160,208,0.1)_53%,transparent_55%)]",
  },
  { // Co-founder - Connected dots
    class: "before:absolute before:inset-0 before:bg-[radial-gradient(circle_at_20%_80%,rgba(70,160,208,0.1)_0,transparent_8px),radial-gradient(circle_at_80%_20%,rgba(70,160,208,0.1)_0,transparent_8px)]",
  },
  { // Real-time - Wave pattern
    class: "before:absolute before:inset-0 before:bg-[linear-gradient(0deg,transparent_40%,rgba(70,160,208,0.1)_45%,rgba(70,160,208,0.1)_55%,transparent_60%)]",
  },
];
---

<section class="relative bg-dark py-32 overflow-hidden">
  <!-- Animated background grid -->
  <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(70, 160, 208, 0.1) 1px, transparent 0); background-size: 40px 40px;"></div>
  
  <!-- Floating shapes -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute top-20 left-20 w-64 h-64 bg-primary/10 rounded-full mix-blend-screen animate-float"></div>
    <div class="absolute bottom-20 right-20 w-96 h-96 bg-secondary/10 rounded-full mix-blend-screen animate-float-delayed"></div>
    <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-gradient-to-br from-primary/5 to-secondary/5 rounded-full blur-3xl"></div>
  </div>

  <div class="container relative mx-auto px-4">
    <!-- Features grid with staggered animation -->
    <div class="relative">
      <!-- Mobile: Scrolling container with fade edges -->
      <div class="md:hidden relative">
        <div class="absolute inset-y-0 left-0 w-8 bg-gradient-to-r from-dark to-transparent z-10"></div>
        <div class="absolute inset-y-0 right-0 w-8 bg-gradient-to-l from-dark to-transparent z-10"></div>
        
        <div id="featuresScroll" class="overflow-hidden">
          <div class="flex animate-features-scroll gap-4">
            {[...features, ...features].map((feature, index) => (
              <div class="group relative w-[280px] sm:w-[320px] flex-shrink-0">
                <div class={`relative bg-white/5 backdrop-blur-lg rounded-2xl p-6 h-full transform transition-all duration-500 hover:scale-105 hover:-translate-y-1 before:rounded-2xl before:transition-opacity before:duration-500 before:opacity-0 group-hover:before:opacity-100 ${decorations[index % features.length].class}`}>
                  <!-- Hover glow effect -->
                  <div class="absolute inset-0 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-2xl opacity-0 group-hover:opacity-100 blur-xl transition-opacity duration-500"></div>
                  
                  <!-- Card content -->
                  <div class="relative z-10 flex flex-col items-center text-center">
                    <div class="mb-4 text-5xl transform group-hover:scale-110 transition-transform duration-300 group-hover:rotate-12">
                      {feature.icon}
                    </div>
                    <h3 class="text-lg font-bold bg-gradient-to-r from-white to-white/80 bg-clip-text text-transparent mb-2">
                      {feature.title}
                    </h3>
                    <p class="text-sm text-white/70 group-hover:text-white/90 transition-colors duration-300">
                      {feature.description}
                    </p>
                  </div>

                  <!-- Animated corner accent -->
                  <div class={`absolute w-16 h-16 transition-all duration-500 opacity-0 group-hover:opacity-100
                    ${(index % features.length) % 2 === 0 ? 'top-0 right-0' : 'bottom-0 left-0'}
                    ${(index % features.length) % 3 === 0 ? 'bg-[radial-gradient(circle_at_30%_30%,rgba(70,160,208,0.2)_0,transparent_60%)]' : 
                      (index % features.length) % 3 === 1 ? 'bg-[conic-gradient(from_0deg_at_50%_50%,transparent_0%,rgba(70,160,208,0.2)_25%,transparent_50%)]' :
                      'bg-[linear-gradient(45deg,transparent,rgba(70,160,208,0.2))]'}`}>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Desktop: Static grid -->
      <div class="hidden md:block">
        <div class="grid md:grid-cols-3 lg:grid-cols-5 gap-4 md:gap-8">
          {features.map((feature, index) => (
            <div 
              class="group relative"
              style={`animation-delay: ${index * 150}ms`}
            >
              <div class={`relative bg-white/5 backdrop-blur-lg rounded-2xl p-6 md:p-8 h-full transform transition-all duration-500 hover:scale-105 hover:-translate-y-1 before:rounded-2xl before:transition-opacity before:duration-500 before:opacity-0 group-hover:before:opacity-100 ${decorations[index].class}`}>
                <!-- Hover glow effect -->
                <div class="absolute inset-0 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-2xl opacity-0 group-hover:opacity-100 blur-xl transition-opacity duration-500"></div>
                
                <!-- Card content -->
                <div class="relative z-10 flex flex-col items-center text-center">
                  <div class="mb-4 md:mb-6 text-5xl md:text-6xl transform group-hover:scale-110 transition-transform duration-300 group-hover:rotate-12">
                    {feature.icon}
                  </div>
                  <h3 class="text-lg md:text-xl font-bold bg-gradient-to-r from-white to-white/80 bg-clip-text text-transparent mb-2 md:mb-3">
                    {feature.title}
                  </h3>
                  <p class="text-sm md:text-base text-white/70 group-hover:text-white/90 transition-colors duration-300">
                    {feature.description}
                  </p>
                </div>

                <!-- Animated corner accent -->
                <div class={`absolute w-16 h-16 transition-all duration-500 opacity-0 group-hover:opacity-100
                  ${index % 2 === 0 ? 'top-0 right-0' : 'bottom-0 left-0'}
                  ${index % 3 === 0 ? 'bg-[radial-gradient(circle_at_30%_30%,rgba(70,160,208,0.2)_0,transparent_60%)]' : 
                    index % 3 === 1 ? 'bg-[conic-gradient(from_0deg_at_50%_50%,transparent_0%,rgba(70,160,208,0.2)_25%,transparent_50%)]' :
                    'bg-[linear-gradient(45deg,transparent,rgba(70,160,208,0.2))]'}`}>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Enhanced touch interaction for mobile scrolling
  const featuresScroll = document.getElementById('featuresScroll');
  
  if (featuresScroll) {
    let touchStartX = 0;
    let isDragging = false;
    
    function handleMouseEnter() {
      if (!featuresScroll) return;
      const scrollingContent = featuresScroll.querySelector('div') as HTMLElement;
      if (scrollingContent) {
        scrollingContent.style.animationPlayState = 'paused';
      }
    }

    function handleMouseLeave() {
      if (isDragging || !featuresScroll) return; // Don't resume if user is dragging
      
      const scrollingContent = featuresScroll.querySelector('div') as HTMLElement;
      if (scrollingContent) {
        scrollingContent.style.animationPlayState = 'running';
      }
    }
    
    function handleTouchStart(e: TouchEvent) {
      touchStartX = e.touches[0].pageX;
      isDragging = true;
      
      // Pause animation while touching
      const scrollingContent = featuresScroll.querySelector('div') as HTMLElement;
      if (scrollingContent) {
        scrollingContent.style.animationPlayState = 'paused';
      }
    }

    function handleTouchMove(e: TouchEvent) {
      if (!touchStartX || !isDragging) return;
      
      // Prevent page scroll while interacting
      e.preventDefault();
    }

    function handleTouchEnd() {
      isDragging = false;
      
             // Resume animation after a natural delay
       setTimeout(() => {
         if (!isDragging && featuresScroll) {
           const scrollingContent = featuresScroll.querySelector('div') as HTMLElement;
           if (scrollingContent) {
             scrollingContent.style.animationPlayState = 'running';
           }
         }
       }, 800);
    }

    // Add mouse events for desktop
    featuresScroll.addEventListener('mouseenter', handleMouseEnter);
    featuresScroll.addEventListener('mouseleave', handleMouseLeave);
    
    // Add touch events for mobile
    featuresScroll.addEventListener('touchstart', handleTouchStart, { passive: false });
    featuresScroll.addEventListener('touchmove', handleTouchMove, { passive: false });
    featuresScroll.addEventListener('touchend', handleTouchEnd, { passive: false });

    // Optimize animation performance
    const scrollingContent = featuresScroll.querySelector('div') as HTMLElement;
    if (scrollingContent) {
      scrollingContent.style.willChange = 'transform';
      scrollingContent.style.backfaceVisibility = 'hidden';
      scrollingContent.style.perspective = '1000px';
    }
  }
</script>

<style>
  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0);
    }
    50% {
      transform: translateY(-20px) rotate(5deg);
    }
  }

  @keyframes floatDelayed {
    0%, 100% {
      transform: translateY(0) rotate(0);
    }
    50% {
      transform: translateY(-30px) rotate(-5deg);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.9);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes features-scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-float {
    animation: float 15s ease-in-out infinite;
  }

  .animate-float-delayed {
    animation: floatDelayed 18s ease-in-out infinite;
  }

  .animate-features-scroll {
    animation: features-scroll 15s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .grid > div {
    animation: fadeInUp 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    opacity: 0;
  }

  /* Hover states */
  .group:hover .bg-gradient-to-br {
    --tw-gradient-from: rgba(70, 160, 208, 0.3);
    --tw-gradient-to: rgba(35, 67, 95, 0.3);
  }

  /* Enhanced interaction states */
  #featuresScroll:hover .animate-features-scroll {
    animation-play-state: paused;
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .animate-features-scroll {
      animation-duration: 12s;
      animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);
    }
  }

  /* Tablet optimizations */
  @media (min-width: 769px) and (max-width: 1024px) {
    .animate-features-scroll {
      animation-duration: 18s;
    }
  }

  /* Optimize animations for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .animate-features-scroll {
      animation: none !important;
    }
  }

  /* Performance optimizations */
  #featuresScroll {
    transform: translateZ(0); /* Force hardware acceleration */
    -webkit-overflow-scrolling: touch;
  }
</style>

